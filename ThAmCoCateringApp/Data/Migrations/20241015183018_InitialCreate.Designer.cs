// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCoCateringApp.Data;

#nullable disable

namespace ThAmCoCateringApp.Data.Migrations
{
    [DbContext(typeof(CateringDbContext))]
    [Migration("20241015183018_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ThAmCoCateringApp.Data.FoodBooking", b =>
                {
                    b.Property<int>("FoodBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientReferenceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("INTEGER");

                    b.HasKey("FoodBookingId");

                    b.HasIndex("MenuId");

                    b.ToTable("FoodBookings");

                    b.HasData(
                        new
                        {
                            FoodBookingId = 1,
                            ClientReferenceId = 101,
                            MenuId = 1,
                            NumberOfGuests = 10
                        },
                        new
                        {
                            FoodBookingId = 2,
                            ClientReferenceId = 102,
                            MenuId = 2,
                            NumberOfGuests = 20
                        },
                        new
                        {
                            FoodBookingId = 3,
                            ClientReferenceId = 103,
                            MenuId = 3,
                            NumberOfGuests = 30
                        },
                        new
                        {
                            FoodBookingId = 4,
                            ClientReferenceId = 104,
                            MenuId = 4,
                            NumberOfGuests = 15
                        },
                        new
                        {
                            FoodBookingId = 5,
                            ClientReferenceId = 105,
                            MenuId = 5,
                            NumberOfGuests = 25
                        },
                        new
                        {
                            FoodBookingId = 6,
                            ClientReferenceId = 106,
                            MenuId = 6,
                            NumberOfGuests = 35
                        },
                        new
                        {
                            FoodBookingId = 7,
                            ClientReferenceId = 107,
                            MenuId = 7,
                            NumberOfGuests = 40
                        },
                        new
                        {
                            FoodBookingId = 8,
                            ClientReferenceId = 108,
                            MenuId = 8,
                            NumberOfGuests = 12
                        },
                        new
                        {
                            FoodBookingId = 9,
                            ClientReferenceId = 109,
                            MenuId = 9,
                            NumberOfGuests = 18
                        },
                        new
                        {
                            FoodBookingId = 10,
                            ClientReferenceId = 110,
                            MenuId = 10,
                            NumberOfGuests = 22
                        },
                        new
                        {
                            FoodBookingId = 11,
                            ClientReferenceId = 111,
                            MenuId = 11,
                            NumberOfGuests = 28
                        },
                        new
                        {
                            FoodBookingId = 12,
                            ClientReferenceId = 112,
                            MenuId = 12,
                            NumberOfGuests = 32
                        },
                        new
                        {
                            FoodBookingId = 13,
                            ClientReferenceId = 113,
                            MenuId = 13,
                            NumberOfGuests = 45
                        },
                        new
                        {
                            FoodBookingId = 14,
                            ClientReferenceId = 114,
                            MenuId = 14,
                            NumberOfGuests = 50
                        },
                        new
                        {
                            FoodBookingId = 15,
                            ClientReferenceId = 115,
                            MenuId = 15,
                            NumberOfGuests = 60
                        });
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.FoodItem", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("REAL");

                    b.HasKey("FoodItemId");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            FoodItemId = 1,
                            Description = "Spicy Chicken Curry with Coconut Milk",
                            UnitPrice = 10.5f
                        },
                        new
                        {
                            FoodItemId = 2,
                            Description = "Steamed Jasmine Rice",
                            UnitPrice = 5f
                        },
                        new
                        {
                            FoodItemId = 3,
                            Description = "Hard-Boiled Free-Range Eggs",
                            UnitPrice = 3.5f
                        },
                        new
                        {
                            FoodItemId = 4,
                            Description = "Grilled Salmon with Lemon Butter Sauce",
                            UnitPrice = 18.75f
                        },
                        new
                        {
                            FoodItemId = 5,
                            Description = "Caesar Salad with Grilled Chicken",
                            UnitPrice = 12f
                        },
                        new
                        {
                            FoodItemId = 6,
                            Description = "Margherita Pizza with Fresh Basil",
                            UnitPrice = 15f
                        },
                        new
                        {
                            FoodItemId = 7,
                            Description = "Beef Burger with Caramelized Onions",
                            UnitPrice = 14.25f
                        },
                        new
                        {
                            FoodItemId = 8,
                            Description = "Vegan Quinoa Salad with Avocado",
                            UnitPrice = 11.5f
                        },
                        new
                        {
                            FoodItemId = 9,
                            Description = "Creamy Mushroom Risotto",
                            UnitPrice = 16.3f
                        },
                        new
                        {
                            FoodItemId = 10,
                            Description = "BBQ Ribs with Coleslaw",
                            UnitPrice = 20f
                        },
                        new
                        {
                            FoodItemId = 11,
                            Description = "Chocolate Lava Cake with Vanilla Ice Cream",
                            UnitPrice = 8.75f
                        },
                        new
                        {
                            FoodItemId = 12,
                            Description = "Garlic Butter Shrimp Skewers",
                            UnitPrice = 19.9f
                        },
                        new
                        {
                            FoodItemId = 13,
                            Description = "Vegetable Stir-Fry with Tofu",
                            UnitPrice = 9.4f
                        },
                        new
                        {
                            FoodItemId = 14,
                            Description = "Penne Alfredo with Grilled Chicken",
                            UnitPrice = 13.6f
                        },
                        new
                        {
                            FoodItemId = 15,
                            Description = "Fresh Fruit Platter with Seasonal Berries",
                            UnitPrice = 7.2f
                        });
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            MenuName = "Vegetarian"
                        },
                        new
                        {
                            MenuId = 2,
                            MenuName = "Non-Vegetarian"
                        },
                        new
                        {
                            MenuId = 3,
                            MenuName = "Vegan"
                        },
                        new
                        {
                            MenuId = 4,
                            MenuName = "Gluten-Free"
                        },
                        new
                        {
                            MenuId = 5,
                            MenuName = "Pescatarian"
                        },
                        new
                        {
                            MenuId = 6,
                            MenuName = "Keto"
                        },
                        new
                        {
                            MenuId = 7,
                            MenuName = "Paleo"
                        },
                        new
                        {
                            MenuId = 8,
                            MenuName = "Low-Carb"
                        },
                        new
                        {
                            MenuId = 9,
                            MenuName = "High-Protein"
                        },
                        new
                        {
                            MenuId = 10,
                            MenuName = "Dairy-Free"
                        },
                        new
                        {
                            MenuId = 11,
                            MenuName = "Nut-Free"
                        },
                        new
                        {
                            MenuId = 12,
                            MenuName = "Halal"
                        },
                        new
                        {
                            MenuId = 13,
                            MenuName = "Kosher"
                        },
                        new
                        {
                            MenuId = 14,
                            MenuName = "Organic"
                        },
                        new
                        {
                            MenuId = 15,
                            MenuName = "Mediterranean"
                        });
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.MenuFoodItem", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuId", "FoodItemId");

                    b.HasIndex("FoodItemId");

                    b.ToTable("MenuFoodItems");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 1
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 2
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 3
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 4
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 5
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 8
                        },
                        new
                        {
                            MenuId = 4,
                            FoodItemId = 7
                        },
                        new
                        {
                            MenuId = 5,
                            FoodItemId = 12
                        },
                        new
                        {
                            MenuId = 6,
                            FoodItemId = 9
                        },
                        new
                        {
                            MenuId = 7,
                            FoodItemId = 13
                        },
                        new
                        {
                            MenuId = 8,
                            FoodItemId = 11
                        },
                        new
                        {
                            MenuId = 9,
                            FoodItemId = 14
                        },
                        new
                        {
                            MenuId = 10,
                            FoodItemId = 6
                        },
                        new
                        {
                            MenuId = 11,
                            FoodItemId = 10
                        },
                        new
                        {
                            MenuId = 12,
                            FoodItemId = 15
                        });
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.FoodBooking", b =>
                {
                    b.HasOne("ThAmCoCateringApp.Data.Menu", "Menu")
                        .WithMany("FoodBookings")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.MenuFoodItem", b =>
                {
                    b.HasOne("ThAmCoCateringApp.Data.FoodItem", "FoodItem")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ThAmCoCateringApp.Data.Menu", "Menu")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.FoodItem", b =>
                {
                    b.Navigation("MenuFoodItems");
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.Menu", b =>
                {
                    b.Navigation("FoodBookings");

                    b.Navigation("MenuFoodItems");
                });
#pragma warning restore 612, 618
        }
    }
}
