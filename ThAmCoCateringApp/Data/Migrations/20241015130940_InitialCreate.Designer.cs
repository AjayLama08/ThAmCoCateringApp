// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCoCateringApp.Data;

#nullable disable

namespace ThAmCoCateringApp.Data.Migrations
{
    [DbContext(typeof(CateringDbContext))]
    [Migration("20241015130940_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ThAmCoCateringApp.Data.FoodBooking", b =>
                {
                    b.Property<int>("FoodBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientReferenceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("INTEGER");

                    b.HasKey("FoodBookingId");

                    b.HasIndex("MenuId");

                    b.ToTable("FoodBookings");

                    b.HasData(
                        new
                        {
                            FoodBookingId = 1,
                            ClientReferenceId = 101,
                            MenuId = 1,
                            NumberOfGuests = 10
                        },
                        new
                        {
                            FoodBookingId = 2,
                            ClientReferenceId = 201,
                            MenuId = 2,
                            NumberOfGuests = 20
                        },
                        new
                        {
                            FoodBookingId = 3,
                            ClientReferenceId = 301,
                            MenuId = 3,
                            NumberOfGuests = 30
                        });
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.FoodItem", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("REAL");

                    b.HasKey("FoodItemId");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            FoodItemId = 1,
                            Description = "Chicken curry",
                            UnitPrice = 10f
                        },
                        new
                        {
                            FoodItemId = 2,
                            Description = "Steamed rice",
                            UnitPrice = 20f
                        },
                        new
                        {
                            FoodItemId = 3,
                            Description = "Boiled eggs",
                            UnitPrice = 30f
                        });
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            MenuName = "Vegetarian"
                        },
                        new
                        {
                            MenuId = 2,
                            MenuName = "Non-Vegetarian"
                        },
                        new
                        {
                            MenuId = 3,
                            MenuName = "Vegan"
                        });
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.MenuFoodItem", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuId", "FoodItemId");

                    b.HasIndex("FoodItemId");

                    b.ToTable("MenuFoodItems");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 1
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 2
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 3
                        });
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.FoodBooking", b =>
                {
                    b.HasOne("ThAmCoCateringApp.Data.Menu", "Menu")
                        .WithMany("FoodBookings")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.MenuFoodItem", b =>
                {
                    b.HasOne("ThAmCoCateringApp.Data.FoodItem", "FoodItem")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ThAmCoCateringApp.Data.Menu", "Menu")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.FoodItem", b =>
                {
                    b.Navigation("MenuFoodItems");
                });

            modelBuilder.Entity("ThAmCoCateringApp.Data.Menu", b =>
                {
                    b.Navigation("FoodBookings");

                    b.Navigation("MenuFoodItems");
                });
#pragma warning restore 612, 618
        }
    }
}
